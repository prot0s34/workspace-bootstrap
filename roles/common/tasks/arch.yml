---
- name: Update pacman cache
  become: true
  community.general.pacman:
    update_cache: yes

- name: Install pacman packages
  become: true
  community.general.pacman:
    name: "{{ item }}"
    state: present
  loop:
    - tmux
    - git
    - bat
    - make
    - python-pip
    - python
    - ca-certificates
    - curl
    - gnupg
    - zsh
    - zip
    - pigz
    - ruby
    - btop
    - nodejs
    - terraform
    - helm
    - k9s
    - dust
    - duf
    - neovim
    - strace
    - rustup
    - python-pynvim
    - rsync
    - github-cli

- name: User Make Dirs
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "~/.npm-global"
    - "~/.local/share/fonts/"
    - "~/.local/share/nvim/site/autoload/"

- name: Binaries Compressed - Fetch and Install
  become: true
  ansible.builtin.unarchive:
    src: "{{ item }}"
    remote_src: true
    dest: /usr/local/bin
    mode: "ugo+rx"
  loop:
    - "https://github.com/dduan/tre/releases/download/v0.4.0/tre-v0.4.0-x86_64-unknown-linux-musl.tar.gz" # https://github.com/dduan/tre

- name: Plain Binaries - Fetch and Install
  become: true
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "/usr/local/bin/{{ item.destname }}" 
    mode: "ugo+rx"
  loop:
    - { url: "https://github.com/prot0s34/simple-ssh-manager/releases/download/v0.1.11/sshmanager", destname: "sshmanager"}

- name: User Configs and Plugins - Fetch and Install
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
  loop:
    - { url: "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim", dest: "~/.local/share/nvim/site/autoload/" }

- name: Rustup install
  shell: rustup default stable 

- name: Check Oh My Zsh
  stat:
    path: ~/.oh-my-zsh/oh-my-zsh.sh
  register: oh_my_zsh_installed

- name: Install Oh My Zsh
  shell:
    cmd: "curl --proto '=https' --tlsv1.2 -fsS https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh -s -- y"
  when: oh_my_zsh_installed.stat.exists == false

- name: Install Starship
  shell:
    cmd: "curl -sS https://starship.rs/install.sh | sh -s -- -y"
  become: true

- name: Install LunarVim
  # nightly off cause using neovim 0.9.4 from pacman shell: curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh | bash || true
  shell: LV_BRANCH='release-1.3/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh)

- name: Cargo Install macchina
  shell: ~/.cargo/bin/cargo install macchina && mv ~/.cargo/bin/macchina /tmp/

- name: mv macchina
  shell: mv /tmp/macchina /usr/local/bin/
  become: true

- name: Clone dotfiles repository
  git:
    repo: https://github.com/prot0s34/dotfiles.git
    dest: /tmp/dotfiles/
    update: true
  become: true

- name: Clone zsh plugins 
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    update: true
  loop:
    - { repo: "https://github.com/zsh-users/zsh-autosuggestions.git", dest: "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions" }
    - { repo: "https://github.com/chrissicool/zsh-256color.git", dest: "~/.oh-my-zsh/custom/plugins/zsh-256color" }
    - { repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git", dest: "~/.oh-my-zsh/plugins/zsh-syntax-highlighting" }

- name: Copy dotfiles in workdir
  command: rsync -a --exclude 'README.md' --exclude '.git' /tmp/dotfiles/ ~/

- name: Install nvim plugins
  shell: nvim +PlugInstall +qall &

- name: Install tmux TMP
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: ~/.tmux/plugins/tpm
    update: true

- name: Install tmux plugins
  command: ~/.tmux/plugins/tpm/scripts/install_plugins.sh

- name: Install tmuxinator
  command: gem install tmuxinator
  become: true

- name: Clone SFMono Nerd Font repository
  git:
    repo: https://github.com/shaunsingh/SFMono-Nerd-Font-Ligaturized.git
    dest: "/tmp/SFMono-Nerd-Font-Ligaturized"

- name: Copy fonts to ~/.local/share/fonts
  shell: "cp /tmp/SFMono-Nerd-Font-Ligaturized/*.otf ~/.local/share/fonts/"

- name: Change Shell to ZSH
  user:
    name: "{{ ansible_user }}"
    shell: /usr/bin/zsh
  become: true

- name: Run krew installation script
  ansible.builtin.shell: |
    set -x
    temp_dir="$(mktemp -d)"
    cd "$temp_dir" &&
    OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
    ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
    KREW="krew-${OS}_${ARCH}" &&
    curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
    tar zxvf "${KREW}.tar.gz" &&
    ./"${KREW}" install krew
  args:
    executable: /bin/bash

- name: Install kubectx & kubens
  shell: |
    kubectl krew update &&
    kubectl krew install ctx &&
    kubectl krew install ns
  args:
    executable: /bin/bash

- name: Install Ansible
  command: pip3 install ansible 


